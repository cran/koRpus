new("kRp.tagged"
    , lang = "en"
    , desc = structure(list(all.chars = 3554L, lines = 10L, normalized.space = 3549L, 
    chars.no.space = 2996L, punct = 78L, digits = 4L, letters = structure(c(2918, 
    19, 92, 74, 81, 51, 49, 65, 42, 35, 22, 16, 6, 3, 0, 0, 1
    ), .Names = c("all", "l1", "l2", "l3", "l4", "l5", "l6", 
    "l7", "l8", "l9", "l10", "l11", "l12", "l13", "l14", "l15", 
    "l16")), letters.only = 2914L, char.distrib = structure(c(88, 
    88, 537, 14.08, 14.08, 85.92, 92, 180, 445, 14.72, 28.8, 
    71.2, 74, 254, 371, 11.84, 40.64, 59.36, 81, 335, 290, 12.96, 
    53.6, 46.4, 51, 386, 239, 8.16, 61.76, 38.24, 49, 435, 190, 
    7.84, 69.6, 30.4, 65, 500, 125, 10.4, 80, 20, 42, 542, 83, 
    6.72, 86.72, 13.28, 35, 577, 48, 5.6, 92.32, 7.68, 22, 599, 
    26, 3.52, 95.84, 4.16, 16, 615, 10, 2.56, 98.4, 1.6, 6, 621, 
    4, 0.96, 99.36, 0.64, 3, 624, 1, 0.48, 99.84, 0.16, 0, 624, 
    1, 0, 99.84, 0.16, 0, 624, 1, 0, 99.84, 0.16, 1, 625, 0, 
    0.16, 100, 0), .Dim = c(6L, 16L), .Dimnames = list(c("num", 
    "cum.sum", "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", 
    "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
    "13", "14", "15", "16"))), lttr.distrib = structure(c(19, 
    19, 537, 3.41726618705036, 3.41726618705036, 96.5827338129496, 
    92, 111, 445, 16.5467625899281, 19.9640287769784, 80.0359712230216, 
    74, 185, 371, 13.3093525179856, 33.273381294964, 66.726618705036, 
    81, 266, 290, 14.568345323741, 47.841726618705, 52.158273381295, 
    51, 317, 239, 9.1726618705036, 57.0143884892086, 42.9856115107914, 
    49, 366, 190, 8.81294964028777, 65.8273381294964, 34.1726618705036, 
    65, 431, 125, 11.6906474820144, 77.5179856115108, 22.4820143884892, 
    42, 473, 83, 7.55395683453237, 85.0719424460432, 14.9280575539568, 
    35, 508, 48, 6.29496402877698, 91.3669064748201, 8.63309352517986, 
    22, 530, 26, 3.9568345323741, 95.3237410071942, 4.67625899280576, 
    16, 546, 10, 2.87769784172662, 98.2014388489209, 1.79856115107914, 
    6, 552, 4, 1.07913669064748, 99.2805755395683, 0.719424460431655, 
    3, 555, 1, 0.539568345323741, 99.8201438848921, 0.179856115107914, 
    0, 555, 1, 0, 99.8201438848921, 0.179856115107914, 0, 555, 
    1, 0, 99.8201438848921, 0.179856115107914, 1, 556, 0, 0.179856115107914, 
    100, 0), .Dim = c(6L, 16L), .Dimnames = list(c("num", "cum.sum", 
    "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", "2", "3", 
    "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", 
    "15", "16"))), words = 556L, sentences = 20L, avg.sentc.length = 27.8, 
    avg.word.length = 5.24820143884892), .Names = c("all.chars", 
"lines", "normalized.space", "chars.no.space", "punct", "digits", 
"letters", "letters.only", "char.distrib", "lttr.distrib", "words", 
"sentences", "avg.sentc.length", "avg.word.length"))
    , TT.res = structure(list(token = c("Defense", "mechanisms", "Phasmatodea", 
"species", "exhibit", "mechanisms", "for", "defense", "from", 
"predators", "that", "both", "prevent", "an", "attack", "from", 
"happening", "in", "the", "first", "place", "(", "primary", "defense", 
")", "and", "are", "deployed", "after", "an", "attack", "has", 
"been", "initiated", "(", "secondary", "defense", ")", ".", "The", 
"defense", "mechanism", "most", "readily", "identifiable", "with", 
"Phasmatodea", "is", "camouflage", ".", "Most", "phasmids", "are", 
"known", "for", "effectively", "replicating", "the", "forms", 
"of", "sticks", "and", "leaves", ",", "and", "the", "bodies", 
"of", "some", "species", "(", "such", "as", "O.", "macklotti", 
"and", "Palophus", "centaurus", ")", "are", "covered", "in", 
"mossy", "or", "lichenous", "outgrowths", "that", "supplement", 
"their", "disguise", ".", "Some", "species", "have", "the", "ability", 
"to", "change", "color", "as", "their", "surroundings", "shift", 
"(", "B.", "scabrinota", ",", "T.", "californica", ")", ".", 
"In", "a", "further", "behavioral", "adaptation", "to", "supplement", 
"crypsis", ",", "a", "number", "of", "species", "have", "been", 
"noted", "to", "perform", "a", "rocking", "motion", "where", 
"the", "body", "is", "swayed", "from", "side", "to", "side", 
"that", "is", "thought", "to", "reflect", "the", "movement", 
"of", "leaves", "or", "twigs", "swaying", "in", "the", "breeze", 
".", "Another", "method", "by", "which", "stick", "insects", 
"avoid", "predation", "and", "resemble", "twigs", "is", "by", 
"feigning", "death", "(", "catalepsy", ")", ",", "where", "the", 
"insect", "enters", "a", "motionless", "state", "that", "can", 
"be", "maintained", "for", "a", "long", "period", ".", "The", 
"nocturnal", "feeding", "habits", "of", "adults", "also", "aids", 
"Phasmatodea", "in", "remaining", "concealed", "from", "predators", 
".", "In", "a", "seemingly", "opposite", "method", "of", "defense", 
",", "many", "species", "of", "Phasmatodea", "will", "seek", 
"to", "startle", "the", "encroaching", "predator", "by", "flashing", 
"bright", "colors", "that", "are", "normally", "hidden", "and", 
"making", "a", "loud", "noise", ".", "When", "disturbed", "on", 
"a", "branch", "or", "foliage", ",", "some", "species", ",", 
"while", "dropping", "to", "the", "undergrowth", "to", "escape", 
",", "will", "open", "their", "wings", "momentarily", "during", 
"free", "fall", "to", "display", "bright", "colors", "that", 
"disappear", "when", "the", "insect", "lands", ".", "Others", 
"will", "maintain", "their", "display", "for", "up", "to", "20", 
"minutes", ",", "hoping", "to", "frighten", "the", "predator", 
"and", "convey", "the", "appearance", "of", "a", "larger", "size", 
".", "Some", "accompany", "the", "visual", "display", "with", 
"noise", "made", "by", "rubbing", "together", "parts", "of", 
"the", "wings", "or", "antennae", ".", "Some", "species", ",", 
"such", "as", "the", "young", "nymphs", "of", "E.", "tiaratum", 
",", "have", "been", "observed", "to", "curl", "the", "abdomen", 
"upwards", "over", "the", "body", "and", "head", "to", "resemble", 
"ants", "or", "scorpions", "in", "an", "act", "of", "mimicry", 
",", "another", "defense", "mechanism", "by", "which", "the", 
"insects", "avoid", "becoming", "prey", ".", "When", "threatened", 
",", "some", "phasmids", "that", "are", "equipped", "with", "femoral", 
"spines", "on", "the", "metathoracic", "legs", "(", "O.", "martini", 
",", "Eurycantha", "calcarata", ",", "Eurycantha", "horrida", 
",", "D.", "veiliei", ",", "D.", "covilleae", ")", "respond", 
"by", "curling", "the", "abdomen", "upward", "and", "repeatedly", 
"swinging", "the", "legs", "together", ",", "grasping", "at", 
"the", "threat", ".", "If", "the", "menace", "is", "caught", 
",", "the", "spines", "can", "draw", "blood", "and", "inflict", 
"considerable", "pain", ".", "[", "5", "]", "A", "number", "of", 
"species", "are", "equipped", "with", "a", "pair", "of", "glands", 
"at", "the", "anterior", "edge", "of", "the", "prothorax", "that", 
"enable", "the", "insect", "to", "release", "defensive", "secretions", 
",", "including", "chemical", "compounds", "of", "varying", "effect", 
":", "from", "the", "production", "of", "distinct", "odors", 
"to", "the", "causing", "of", "a", "stinging", ",", "burning", 
"sensation", "in", "the", "eyes", "and", "mouth", "of", "a", 
"predator", ".", "The", "spray", "often", "contains", "pungent-smelling", 
"volatile", "metabolites", ",", "thought", "to", "be", "concentrated", 
"in", "the", "insect", "from", "its", "plant", "food", "sources", 
".", "The", "spray", "from", "one", "species", ",", "Megacrania", 
"nigrosulfurea", ",", "is", "even", "used", "as", "a", "treatment", 
"for", "skin", "infections", "by", "a", "tribe", "in", "Papua", 
"New", "Guinea", "because", "of", "its", "antibacterial", "constituents", 
".", "[", "6", "]", "Some", "species", "employ", "a", "shorter-range", 
"defensive", "secretion", ",", "where", "individuals", "bleed", 
"reflexively", "through", "the", "joints", "of", "their", "legs", 
"and", "the", "seems", "of", "the", "exoskeleton", "when", "bothered", 
",", "allowing", "the", "blood", "(", "hemolymph", ")", ",", 
"which", "contains", "distasteful", "additives", ",", "to", "discourage", 
"predators", ".", "Stick", "insects", ",", "like", "their", "distant", 
"relation", "the", "grasshopper", ",", "can", "also", "discharge", 
"the", "contents", "of", "their", "stomach", "through", "vomiting", 
"when", "harassed", ",", "a", "fluid", "that", "is", "considered", 
"inedible", "by", "some", "predators", "."), tag = c("word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "(kRp", "word.kRp", "word.kRp", ")kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "(kRp", "word.kRp", "word.kRp", 
")kRp", ".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "(kRp", "word.kRp", "word.kRp", 
"abbr.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ")kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"(kRp", "abbr.kRp", "word.kRp", ",kRp", "abbr.kRp", "word.kRp", 
")kRp", ".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "(kRp", "word.kRp", ")kRp", 
",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
",kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ",kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "no.kRp", "word.kRp", ",kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ".kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "abbr.kRp", 
"word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
".kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "(kRp", "abbr.kRp", 
"word.kRp", ",kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", 
"word.kRp", ",kRp", "abbr.kRp", "word.kRp", ",kRp", "abbr.kRp", 
"word.kRp", ")kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", 
"(kRp", "no.kRp", ")kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ",kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
".kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "unk.kRp", 
"word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", ".kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp", "(kRp", 
"no.kRp", ")kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"unk.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", 
"word.kRp", "word.kRp", "(kRp", "word.kRp", ")kRp", ",kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", "word.kRp", 
"word.kRp", ".kRp", "word.kRp", "word.kRp", ",kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", ",kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
",kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", "word.kRp", 
"word.kRp", "word.kRp", "word.kRp", "word.kRp", ".kRp"), lemma = c("", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""
), lttr = c(7, 10, 11, 7, 7, 10, 3, 7, 4, 9, 4, 4, 7, 2, 6, 4, 
9, 2, 3, 5, 5, 1, 7, 7, 1, 3, 3, 8, 5, 2, 6, 3, 4, 9, 1, 9, 7, 
1, 1, 3, 7, 9, 4, 7, 12, 4, 11, 2, 10, 1, 4, 8, 3, 5, 3, 11, 
11, 3, 5, 2, 6, 3, 6, 1, 3, 3, 6, 2, 4, 7, 1, 4, 2, 2, 9, 3, 
8, 9, 1, 3, 7, 2, 5, 2, 9, 10, 4, 10, 5, 8, 1, 4, 7, 4, 3, 7, 
2, 6, 5, 2, 5, 12, 5, 1, 2, 10, 1, 2, 11, 1, 1, 2, 1, 7, 10, 
10, 2, 10, 7, 1, 1, 6, 2, 7, 4, 4, 5, 2, 7, 1, 7, 6, 5, 3, 4, 
2, 6, 4, 4, 2, 4, 4, 2, 7, 2, 7, 3, 8, 2, 6, 2, 5, 7, 2, 3, 6, 
1, 7, 6, 2, 5, 5, 7, 5, 9, 3, 8, 5, 2, 2, 8, 5, 1, 9, 1, 1, 5, 
3, 6, 6, 1, 10, 5, 4, 3, 2, 10, 3, 1, 4, 6, 1, 3, 9, 7, 6, 2, 
6, 4, 4, 11, 2, 9, 9, 4, 9, 1, 2, 1, 9, 8, 6, 2, 7, 1, 4, 7, 
2, 11, 4, 4, 2, 7, 3, 11, 8, 2, 8, 6, 6, 4, 3, 8, 6, 3, 6, 1, 
4, 5, 1, 4, 9, 2, 1, 6, 2, 7, 1, 4, 7, 1, 5, 8, 2, 3, 11, 2, 
6, 1, 4, 4, 5, 5, 11, 6, 4, 4, 2, 7, 6, 6, 4, 9, 4, 3, 6, 5, 
1, 6, 4, 8, 5, 7, 3, 2, 2, 2, 7, 1, 6, 2, 8, 3, 8, 3, 6, 3, 10, 
2, 1, 6, 4, 1, 4, 9, 3, 6, 7, 4, 5, 4, 2, 7, 8, 5, 2, 3, 5, 2, 
8, 1, 4, 7, 1, 4, 2, 3, 5, 6, 2, 2, 8, 1, 4, 4, 8, 2, 4, 3, 7, 
7, 4, 3, 4, 3, 4, 2, 8, 4, 2, 9, 2, 2, 3, 2, 7, 1, 7, 7, 9, 2, 
5, 3, 7, 5, 8, 4, 1, 4, 10, 1, 4, 8, 4, 3, 8, 4, 7, 6, 2, 3, 
12, 4, 1, 2, 7, 1, 10, 9, 1, 10, 7, 1, 2, 7, 1, 2, 9, 1, 7, 2, 
7, 3, 7, 6, 3, 10, 8, 3, 4, 8, 1, 8, 2, 3, 6, 1, 2, 3, 6, 2, 
6, 1, 3, 6, 3, 4, 5, 3, 7, 12, 4, 1, 1, 1, 1, 1, 6, 2, 7, 3, 
8, 4, 1, 4, 2, 6, 2, 3, 8, 4, 2, 3, 9, 4, 6, 3, 6, 2, 7, 9, 10, 
1, 9, 8, 9, 2, 7, 6, 1, 4, 3, 10, 2, 8, 5, 2, 3, 7, 2, 1, 8, 
1, 7, 9, 2, 3, 4, 3, 5, 2, 1, 8, 1, 3, 5, 5, 8, 16, 8, 11, 1, 
7, 2, 2, 12, 2, 3, 6, 4, 3, 5, 4, 7, 1, 3, 5, 4, 3, 7, 1, 10, 
13, 1, 2, 4, 4, 2, 1, 9, 3, 4, 10, 2, 1, 5, 2, 5, 3, 6, 7, 2, 
3, 13, 12, 1, 1, 1, 1, 4, 7, 6, 1, 13, 9, 9, 1, 5, 11, 5, 11, 
7, 3, 6, 2, 5, 4, 3, 3, 5, 2, 3, 11, 4, 8, 1, 8, 3, 5, 1, 9, 
1, 1, 5, 8, 11, 9, 1, 2, 10, 9, 1, 5, 7, 1, 4, 5, 7, 8, 3, 11, 
1, 3, 4, 9, 3, 8, 2, 5, 7, 7, 8, 4, 8, 1, 1, 5, 4, 2, 10, 8, 
2, 4, 9, 1), wclass = c("word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"punctuation", "word", "word", "punctuation", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "punctuation", 
"word", "word", "punctuation", "fullstop", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "fullstop", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "comma", "word", "word", 
"word", "word", "word", "word", "punctuation", "word", "word", 
"abbreviation", "word", "word", "word", "word", "punctuation", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "fullstop", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"punctuation", "abbreviation", "word", "comma", "abbreviation", 
"word", "punctuation", "fullstop", "word", "word", "word", "word", 
"word", "word", "word", "word", "comma", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "fullstop", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "punctuation", "word", "punctuation", "comma", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "fullstop", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "fullstop", "word", "word", 
"word", "word", "word", "word", "word", "comma", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "fullstop", "word", 
"word", "word", "word", "word", "word", "word", "comma", "word", 
"word", "comma", "word", "word", "word", "word", "word", "word", 
"word", "comma", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "fullstop", "word", "word", "word", 
"word", "word", "word", "word", "word", "number", "word", "comma", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "fullstop", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "fullstop", 
"word", "word", "comma", "word", "word", "word", "word", "word", 
"word", "abbreviation", "word", "comma", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "comma", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "fullstop", 
"word", "word", "comma", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "punctuation", 
"abbreviation", "word", "comma", "word", "word", "comma", "word", 
"word", "comma", "abbreviation", "word", "comma", "abbreviation", 
"word", "punctuation", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "comma", 
"word", "word", "word", "word", "fullstop", "word", "word", "word", 
"word", "word", "comma", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "fullstop", "punctuation", "number", 
"punctuation", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "comma", "word", "word", "word", 
"word", "word", "word", "fullstop", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"comma", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "fullstop", "word", "word", "word", "word", 
"unknown", "word", "word", "comma", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"fullstop", "word", "word", "word", "word", "word", "comma", 
"word", "word", "comma", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"fullstop", "punctuation", "number", "punctuation", "word", "word", 
"word", "word", "unknown", "word", "word", "comma", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"comma", "word", "word", "word", "punctuation", "word", "punctuation", 
"comma", "word", "word", "word", "word", "comma", "word", "word", 
"word", "fullstop", "word", "word", "comma", "word", "word", 
"word", "word", "word", "word", "comma", "word", "word", "word", 
"word", "word", "word", "word", "word", "word", "word", "word", 
"word", "comma", "word", "word", "word", "word", "word", "word", 
"word", "word", "word", "fullstop"), desc = c("Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Opening bracket (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Closing bracket (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Opening bracket (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Closing bracket (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Opening bracket (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Closing bracket (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Opening bracket (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Closing bracket (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Sentence ending punctuation (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Opening bracket (kRp internal)", 
"Word (kRp internal)", "Closing bracket (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Sentence ending punctuation (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Comma (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Number (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Sentence ending punctuation (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Abbreviation (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Opening bracket (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Abbreviation (kRp internal)", 
"Word (kRp internal)", "Closing bracket (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Sentence ending punctuation (kRp internal)", "Opening bracket (kRp internal)", 
"Number (kRp internal)", "Closing bracket (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Comma (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Unknown (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Sentence ending punctuation (kRp internal)", "Opening bracket (kRp internal)", 
"Number (kRp internal)", "Closing bracket (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Unknown (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Comma (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Opening bracket (kRp internal)", 
"Word (kRp internal)", "Closing bracket (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Comma (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Comma (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Comma (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Word (kRp internal)", 
"Word (kRp internal)", "Word (kRp internal)", "Sentence ending punctuation (kRp internal)"
), stop = c(FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
FALSE, FALSE, FALSE, FALSE, FALSE), stem = c(NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA)), .Names = c("token", 
"tag", "lemma", "lttr", "wclass", "desc", "stop", "stem"), row.names = c(NA, 
625L), class = "data.frame")
)
