new("kRp.tagged", lang = "xy", desc = list(all.chars = 10L, lines = 1L, 
    normalized.space = 9L, chars.no.space = 9L, punct = 0L, digits = 0L, 
    letters = c(all = 9, l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, 
    l6 = 0, l7 = 0, l8 = 0, l9 = 1), letters.only = 9L, char.distrib = structure(c(0, 
    0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 
    0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 
    0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 1, 1, 0, 100, 100, 
    0), .Dim = c(6L, 9L), .Dimnames = list(c("num", "cum.sum", 
    "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", "2", "3", 
    "4", "5", "6", "7", "8", "9"))), lttr.distrib = structure(c(0, 
    0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 
    0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 
    0, 0, 1, 0, 0, 100, 0, 0, 1, 0, 0, 100, 1, 1, 0, 100, 100, 
    0), .Dim = c(6L, 9L), .Dimnames = list(c("num", "cum.sum", 
    "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", "2", "3", 
    "4", "5", "6", "7", "8", "9"))), words = 1L, sentences = 0L, 
    avg.sentc.length = Inf, avg.word.length = 9, doc_id = NA), 
    TT.res = structure(list(doc_id = structure(NA_integer_, .Label = character(0), class = "factor"), 
        token = "singleton", tag = structure(51L, .Label = c("CC", 
        "CD", "DT", "EX", "FW", "IN", "IN/that", "JJ", "JJR", 
        "JJS", "LS", "MD", "NN", "NNS", "NP", "NPS", "NS", "PDT", 
        "POS", "PP", "PP$", "RB", "RBR", "RBS", "RP", "SYM", 
        "TO", "UH", "VB", "VBD", "VBG", "VBN", "VBP", "VBZ", 
        "VH", "VHD", "VHG", "VHN", "VHP", "VHZ", "VV", "VVD", 
        "VVG", "VVN", "VVP", "VVZ", "WDT", "WP", "WP$", "WRB", 
        "word.kRp", "no.kRp", "abbr.kRp", "unk.kRp", "#", "$", 
        "''", "(", ")", ",", ":", "``", ",kRp", "(kRp", ")kRp", 
        "''kRp", "-kRp", "hon.kRp", "p.kRp", "SENT", ".kRp", 
        "hoff.kRp"), class = "factor"), lemma = "", lttr = 9, 
        wclass = structure(21L, .Label = c("conjunction", "number", 
        "determiner", "existential", "foreign", "preposition", 
        "adjective", "listmarker", "modal", "noun", "name", "predeterminer", 
        "possesive", "pronoun", "adverb", "particle", "symbol", 
        "to", "interjection", "verb", "word", "abbreviation", 
        "unknown", "punctuation", "comma", "fullstop"), class = "factor"), 
        desc = structure(49L, .Label = c("Coordinating conjunction", 
        "Cardinal number", "Determiner", "Existential there", 
        "Foreign word", "Preposition or subordinating conjunction", 
        "Adjective", "Adjective, comparative", "Adjective, superlative", 
        "List item marker", "Modal", "Noun, singular or mass", 
        "Noun, plural", "Proper noun, singular", "Proper noun, plural", 
        "Predeterminer", "Possessive ending", "Personal pronoun", 
        "Possessive pronoun", "Adverb", "Adverb, comparative", 
        "Adverb, superlative", " Particle", "Symbol", "to", "Interjection", 
        "Verb, base form of \"to be\"", "Verb, past tense of \"to be\"", 
        "Verb, gerund or present participle of \"to be\"", "Verb, past participle of \"to be\"", 
        "Verb, non-3rd person singular present of \"to be\"", 
        "Verb, 3rd person singular present of \"to be\"", "Verb, base form of \"to have\"", 
        "Verb, past tense of \"to have\"", "Verb, gerund or present participle of \"to have\"", 
        "Verb, past participle of \"to have\"", "Verb, non-3rd person singular present of \"to have\"", 
        "Verb, 3rd person singular present of \"to have\"", "Verb, base form", 
        "Verb, past tense", "Verb, gerund or present participle", 
        "Verb, past participle", "Verb, non-3rd person singular present", 
        "Verb, 3rd person singular present", "Wh-determiner", 
        "Wh-pronoun", "Possessive wh-pronoun", "Wh-adverb", "Word (kRp internal)", 
        "Number (kRp internal)", "Abbreviation (kRp internal)", 
        "Unknown (kRp internal)", "Punctuation", "End quote", 
        "Opening bracket", "Closing bracket", "Comma", "Quote", 
        "Comma (kRp internal)", "Opening bracket (kRp internal)", 
        "Closing bracket (kRp internal)", "Quote (kRp internal)", 
        "Punctuation (kRp internal)", "Headline begins (kRp internal)", 
        "Paragraph (kRp internal)", "Sentence ending punctuation", 
        "Sentence ending punctuation (kRp internal)", "Headline ends (kRp internal)"
        ), class = "factor"), stop = NA, stem = NA, idx = 1L, 
        sntc = NA), row.names = c(NA, -1L), class = "data.frame"))
