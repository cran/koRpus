new("kRp.text", lang = "xy", desc = list(sample_text.txt = list(
    all.chars = 3554L, lines = 10L, normalized.space = 3549L, 
    chars.no.space = 2996L, punct = 78L, digits = 4L, letters = c(all = 2918, 
    l1 = 19, l2 = 92, l3 = 74, l4 = 81, l5 = 51, l6 = 49, l7 = 65, 
    l8 = 42, l9 = 35, l10 = 22, l11 = 16, l12 = 6, l13 = 3, l14 = 0, 
    l15 = 0, l16 = 1), letters.only = 2914L, char.distrib = structure(c(88, 
    88, 537, 14.08, 14.08, 85.92, 92, 180, 445, 14.72, 28.8, 
    71.2, 74, 254, 371, 11.84, 40.64, 59.36, 81, 335, 290, 12.96, 
    53.6, 46.4, 51, 386, 239, 8.16, 61.76, 38.24, 49, 435, 190, 
    7.84, 69.6, 30.4, 65, 500, 125, 10.4, 80, 20, 42, 542, 83, 
    6.72, 86.72, 13.28, 35, 577, 48, 5.6, 92.32, 7.68, 22, 599, 
    26, 3.52, 95.84, 4.16, 16, 615, 10, 2.56, 98.4, 1.6, 6, 621, 
    4, 0.96, 99.36, 0.64, 3, 624, 1, 0.48, 99.84, 0.16, 0, 624, 
    1, 0, 99.84, 0.16, 0, 624, 1, 0, 99.84, 0.16, 1, 625, 0, 
    0.16, 100, 0), .Dim = c(6L, 16L), .Dimnames = list(c("num", 
    "cum.sum", "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", 
    "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", 
    "13", "14", "15", "16"))), lttr.distrib = structure(c(19, 
    19, 537, 3.41726618705036, 3.41726618705036, 96.5827338129496, 
    92, 111, 445, 16.5467625899281, 19.9640287769784, 80.0359712230216, 
    74, 185, 371, 13.3093525179856, 33.273381294964, 66.726618705036, 
    81, 266, 290, 14.568345323741, 47.841726618705, 52.158273381295, 
    51, 317, 239, 9.1726618705036, 57.0143884892086, 42.9856115107914, 
    49, 366, 190, 8.81294964028777, 65.8273381294964, 34.1726618705036, 
    65, 431, 125, 11.6906474820144, 77.5179856115108, 22.4820143884892, 
    42, 473, 83, 7.55395683453237, 85.0719424460432, 14.9280575539568, 
    35, 508, 48, 6.29496402877698, 91.3669064748201, 8.63309352517986, 
    22, 530, 26, 3.9568345323741, 95.3237410071942, 4.67625899280576, 
    16, 546, 10, 2.87769784172662, 98.2014388489209, 1.79856115107914, 
    6, 552, 4, 1.07913669064748, 99.2805755395683, 0.719424460431655, 
    3, 555, 1, 0.539568345323741, 99.8201438848921, 0.179856115107914, 
    0, 555, 1, 0, 99.8201438848921, 0.179856115107914, 0, 555, 
    1, 0, 99.8201438848921, 0.179856115107914, 1, 556, 0, 0.179856115107914, 
    100, 0), .Dim = c(6L, 16L), .Dimnames = list(c("num", "cum.sum", 
    "cum.inv", "pct", "cum.pct", "pct.inv"), c("1", "2", "3", 
    "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", 
    "15", "16"))), words = 556L, sentences = 20L, avg.sentc.length = 27.8, 
    avg.word.length = 5.24820143884892, doc_id = "sample_text.txt")), 
    tokens = structure(list(doc_id = structure(c(1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
    1L, 1L, 1L, 1L, 1L, 1L, 1L), class = "factor", .Label = "sample_text.txt"), 
        token = c("Defense", "mechanisms", "Phasmatodea", "species", 
        "exhibit", "mechanisms", "for", "defense", "from", "predators", 
        "that", "both", "prevent", "an", "attack", "from", "happening", 
        "in", "the", "first", "place", "(", "primary", "defense", 
        ")", "and", "are", "deployed", "after", "an", "attack", 
        "has", "been", "initiated", "(", "secondary", "defense", 
        ")", ".", "The", "defense", "mechanism", "most", "readily", 
        "identifiable", "with", "Phasmatodea", "is", "camouflage", 
        ".", "Most", "phasmids", "are", "known", "for", "effectively", 
        "replicating", "the", "forms", "of", "sticks", "and", 
        "leaves", ",", "and", "the", "bodies", "of", "some", 
        "species", "(", "such", "as", "O.", "macklotti", "and", 
        "Palophus", "centaurus", ")", "are", "covered", "in", 
        "mossy", "or", "lichenous", "outgrowths", "that", "supplement", 
        "their", "disguise", ".", "Some", "species", "have", 
        "the", "ability", "to", "change", "color", "as", "their", 
        "surroundings", "shift", "(", "B.", "scabrinota", ",", 
        "T.", "californica", ")", ".", "In", "a", "further", 
        "behavioral", "adaptation", "to", "supplement", "crypsis", 
        ",", "a", "number", "of", "species", "have", "been", 
        "noted", "to", "perform", "a", "rocking", "motion", "where", 
        "the", "body", "is", "swayed", "from", "side", "to", 
        "side", "that", "is", "thought", "to", "reflect", "the", 
        "movement", "of", "leaves", "or", "twigs", "swaying", 
        "in", "the", "breeze", ".", "Another", "method", "by", 
        "which", "stick", "insects", "avoid", "predation", "and", 
        "resemble", "twigs", "is", "by", "feigning", "death", 
        "(", "catalepsy", ")", ",", "where", "the", "insect", 
        "enters", "a", "motionless", "state", "that", "can", 
        "be", "maintained", "for", "a", "long", "period", ".", 
        "The", "nocturnal", "feeding", "habits", "of", "adults", 
        "also", "aids", "Phasmatodea", "in", "remaining", "concealed", 
        "from", "predators", ".", "In", "a", "seemingly", "opposite", 
        "method", "of", "defense", ",", "many", "species", "of", 
        "Phasmatodea", "will", "seek", "to", "startle", "the", 
        "encroaching", "predator", "by", "flashing", "bright", 
        "colors", "that", "are", "normally", "hidden", "and", 
        "making", "a", "loud", "noise", ".", "When", "disturbed", 
        "on", "a", "branch", "or", "foliage", ",", "some", "species", 
        ",", "while", "dropping", "to", "the", "undergrowth", 
        "to", "escape", ",", "will", "open", "their", "wings", 
        "momentarily", "during", "free", "fall", "to", "display", 
        "bright", "colors", "that", "disappear", "when", "the", 
        "insect", "lands", ".", "Others", "will", "maintain", 
        "their", "display", "for", "up", "to", "20", "minutes", 
        ",", "hoping", "to", "frighten", "the", "predator", "and", 
        "convey", "the", "appearance", "of", "a", "larger", "size", 
        ".", "Some", "accompany", "the", "visual", "display", 
        "with", "noise", "made", "by", "rubbing", "together", 
        "parts", "of", "the", "wings", "or", "antennae", ".", 
        "Some", "species", ",", "such", "as", "the", "young", 
        "nymphs", "of", "E.", "tiaratum", ",", "have", "been", 
        "observed", "to", "curl", "the", "abdomen", "upwards", 
        "over", "the", "body", "and", "head", "to", "resemble", 
        "ants", "or", "scorpions", "in", "an", "act", "of", "mimicry", 
        ",", "another", "defense", "mechanism", "by", "which", 
        "the", "insects", "avoid", "becoming", "prey", ".", "When", 
        "threatened", ",", "some", "phasmids", "that", "are", 
        "equipped", "with", "femoral", "spines", "on", "the", 
        "metathoracic", "legs", "(", "O.", "martini", ",", "Eurycantha", 
        "calcarata", ",", "Eurycantha", "horrida", ",", "D.", 
        "veiliei", ",", "D.", "covilleae", ")", "respond", "by", 
        "curling", "the", "abdomen", "upward", "and", "repeatedly", 
        "swinging", "the", "legs", "together", ",", "grasping", 
        "at", "the", "threat", ".", "If", "the", "menace", "is", 
        "caught", ",", "the", "spines", "can", "draw", "blood", 
        "and", "inflict", "considerable", "pain", ".", "[", "5", 
        "]", "A", "number", "of", "species", "are", "equipped", 
        "with", "a", "pair", "of", "glands", "at", "the", "anterior", 
        "edge", "of", "the", "prothorax", "that", "enable", "the", 
        "insect", "to", "release", "defensive", "secretions", 
        ",", "including", "chemical", "compounds", "of", "varying", 
        "effect", ":", "from", "the", "production", "of", "distinct", 
        "odors", "to", "the", "causing", "of", "a", "stinging", 
        ",", "burning", "sensation", "in", "the", "eyes", "and", 
        "mouth", "of", "a", "predator", ".", "The", "spray", 
        "often", "contains", "pungent-smelling", "volatile", 
        "metabolites", ",", "thought", "to", "be", "concentrated", 
        "in", "the", "insect", "from", "its", "plant", "food", 
        "sources", ".", "The", "spray", "from", "one", "species", 
        ",", "Megacrania", "nigrosulfurea", ",", "is", "even", 
        "used", "as", "a", "treatment", "for", "skin", "infections", 
        "by", "a", "tribe", "in", "Papua", "New", "Guinea", "because", 
        "of", "its", "antibacterial", "constituents", ".", "[", 
        "6", "]", "Some", "species", "employ", "a", "shorter-range", 
        "defensive", "secretion", ",", "where", "individuals", 
        "bleed", "reflexively", "through", "the", "joints", "of", 
        "their", "legs", "and", "the", "seems", "of", "the", 
        "exoskeleton", "when", "bothered", ",", "allowing", "the", 
        "blood", "(", "hemolymph", ")", ",", "which", "contains", 
        "distasteful", "additives", ",", "to", "discourage", 
        "predators", ".", "Stick", "insects", ",", "like", "their", 
        "distant", "relation", "the", "grasshopper", ",", "can", 
        "also", "discharge", "the", "contents", "of", "their", 
        "stomach", "through", "vomiting", "when", "harassed", 
        ",", "a", "fluid", "that", "is", "considered", "inedible", 
        "by", "some", "predators", "."), tag = structure(c(54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 82L, 54L, 
        54L, 83L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        82L, 54L, 54L, 83L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 81L, 54L, 54L, 54L, 
        54L, 54L, 54L, 82L, 54L, 54L, 56L, 54L, 54L, 54L, 54L, 
        83L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 82L, 56L, 54L, 81L, 56L, 54L, 83L, 90L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 81L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 82L, 54L, 83L, 81L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 81L, 54L, 54L, 81L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 55L, 
        54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        90L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 56L, 
        54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 90L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 82L, 56L, 54L, 
        81L, 54L, 54L, 81L, 54L, 54L, 81L, 56L, 54L, 81L, 56L, 
        54L, 83L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 
        54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 90L, 82L, 55L, 83L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 81L, 
        54L, 54L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 81L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 
        54L, 54L, 57L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 90L, 54L, 54L, 54L, 
        54L, 54L, 81L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 90L, 82L, 55L, 83L, 54L, 54L, 
        54L, 54L, 57L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 
        54L, 54L, 81L, 54L, 54L, 54L, 82L, 54L, 83L, 81L, 54L, 
        54L, 54L, 54L, 81L, 54L, 54L, 54L, 90L, 54L, 54L, 81L, 
        54L, 54L, 54L, 54L, 54L, 54L, 81L, 54L, 54L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 54L, 81L, 54L, 54L, 
        54L, 54L, 54L, 54L, 54L, 54L, 54L, 90L), .Label = c("CC", 
        "CD", "DT", "EX", "FW", "IN", "IN/that", "JJ", "JJR", 
        "JJS", "LS", "MD", "NN", "NNP", "NNPS", "NNS", "NP", 
        "NPS", "NS", "PDT", "POS", "PP", "PP$", "PRP$", "RB", 
        "RBR", "RBS", "RP", "SYM", "TO", "UH", "VB", "VBD", "VBG", 
        "VBN", "VBP", "VBZ", "VH", "VHD", "VHG", "VHN", "VHP", 
        "VHZ", "VV", "VVD", "VVG", "VVN", "VVP", "VVZ", "WDT", 
        "WP", "WP$", "WRB", "word.kRp", "no.kRp", "abbr.kRp", 
        "unk.kRp", "ADJ", "ADP", "ADV", "AUX", "CCONJ", "DET", 
        "INTJ", "NOUN", "NUM", "PART", "PRON", "PROPN", "SCONJ", 
        "VERB", "X", "#", "$", "''", "(", ")", ",", ":", "``", 
        ",kRp", "(kRp", ")kRp", "''kRp", "-kRp", "hon.kRp", "p.kRp", 
        "PUNCT", "SENT", ".kRp", "hoff.kRp"), class = "factor"), 
        lemma = c("", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
        "", "", "", "", "", "", "", "", "", "", "", ""), lttr = c(7L, 
        10L, 11L, 7L, 7L, 10L, 3L, 7L, 4L, 9L, 4L, 4L, 7L, 2L, 
        6L, 4L, 9L, 2L, 3L, 5L, 5L, 1L, 7L, 7L, 1L, 3L, 3L, 8L, 
        5L, 2L, 6L, 3L, 4L, 9L, 1L, 9L, 7L, 1L, 1L, 3L, 7L, 9L, 
        4L, 7L, 12L, 4L, 11L, 2L, 10L, 1L, 4L, 8L, 3L, 5L, 3L, 
        11L, 11L, 3L, 5L, 2L, 6L, 3L, 6L, 1L, 3L, 3L, 6L, 2L, 
        4L, 7L, 1L, 4L, 2L, 2L, 9L, 3L, 8L, 9L, 1L, 3L, 7L, 2L, 
        5L, 2L, 9L, 10L, 4L, 10L, 5L, 8L, 1L, 4L, 7L, 4L, 3L, 
        7L, 2L, 6L, 5L, 2L, 5L, 12L, 5L, 1L, 2L, 10L, 1L, 2L, 
        11L, 1L, 1L, 2L, 1L, 7L, 10L, 10L, 2L, 10L, 7L, 1L, 1L, 
        6L, 2L, 7L, 4L, 4L, 5L, 2L, 7L, 1L, 7L, 6L, 5L, 3L, 4L, 
        2L, 6L, 4L, 4L, 2L, 4L, 4L, 2L, 7L, 2L, 7L, 3L, 8L, 2L, 
        6L, 2L, 5L, 7L, 2L, 3L, 6L, 1L, 7L, 6L, 2L, 5L, 5L, 7L, 
        5L, 9L, 3L, 8L, 5L, 2L, 2L, 8L, 5L, 1L, 9L, 1L, 1L, 5L, 
        3L, 6L, 6L, 1L, 10L, 5L, 4L, 3L, 2L, 10L, 3L, 1L, 4L, 
        6L, 1L, 3L, 9L, 7L, 6L, 2L, 6L, 4L, 4L, 11L, 2L, 9L, 
        9L, 4L, 9L, 1L, 2L, 1L, 9L, 8L, 6L, 2L, 7L, 1L, 4L, 7L, 
        2L, 11L, 4L, 4L, 2L, 7L, 3L, 11L, 8L, 2L, 8L, 6L, 6L, 
        4L, 3L, 8L, 6L, 3L, 6L, 1L, 4L, 5L, 1L, 4L, 9L, 2L, 1L, 
        6L, 2L, 7L, 1L, 4L, 7L, 1L, 5L, 8L, 2L, 3L, 11L, 2L, 
        6L, 1L, 4L, 4L, 5L, 5L, 11L, 6L, 4L, 4L, 2L, 7L, 6L, 
        6L, 4L, 9L, 4L, 3L, 6L, 5L, 1L, 6L, 4L, 8L, 5L, 7L, 3L, 
        2L, 2L, 2L, 7L, 1L, 6L, 2L, 8L, 3L, 8L, 3L, 6L, 3L, 10L, 
        2L, 1L, 6L, 4L, 1L, 4L, 9L, 3L, 6L, 7L, 4L, 5L, 4L, 2L, 
        7L, 8L, 5L, 2L, 3L, 5L, 2L, 8L, 1L, 4L, 7L, 1L, 4L, 2L, 
        3L, 5L, 6L, 2L, 2L, 8L, 1L, 4L, 4L, 8L, 2L, 4L, 3L, 7L, 
        7L, 4L, 3L, 4L, 3L, 4L, 2L, 8L, 4L, 2L, 9L, 2L, 2L, 3L, 
        2L, 7L, 1L, 7L, 7L, 9L, 2L, 5L, 3L, 7L, 5L, 8L, 4L, 1L, 
        4L, 10L, 1L, 4L, 8L, 4L, 3L, 8L, 4L, 7L, 6L, 2L, 3L, 
        12L, 4L, 1L, 2L, 7L, 1L, 10L, 9L, 1L, 10L, 7L, 1L, 2L, 
        7L, 1L, 2L, 9L, 1L, 7L, 2L, 7L, 3L, 7L, 6L, 3L, 10L, 
        8L, 3L, 4L, 8L, 1L, 8L, 2L, 3L, 6L, 1L, 2L, 3L, 6L, 2L, 
        6L, 1L, 3L, 6L, 3L, 4L, 5L, 3L, 7L, 12L, 4L, 1L, 1L, 
        1L, 1L, 1L, 6L, 2L, 7L, 3L, 8L, 4L, 1L, 4L, 2L, 6L, 2L, 
        3L, 8L, 4L, 2L, 3L, 9L, 4L, 6L, 3L, 6L, 2L, 7L, 9L, 10L, 
        1L, 9L, 8L, 9L, 2L, 7L, 6L, 1L, 4L, 3L, 10L, 2L, 8L, 
        5L, 2L, 3L, 7L, 2L, 1L, 8L, 1L, 7L, 9L, 2L, 3L, 4L, 3L, 
        5L, 2L, 1L, 8L, 1L, 3L, 5L, 5L, 8L, 16L, 8L, 11L, 1L, 
        7L, 2L, 2L, 12L, 2L, 3L, 6L, 4L, 3L, 5L, 4L, 7L, 1L, 
        3L, 5L, 4L, 3L, 7L, 1L, 10L, 13L, 1L, 2L, 4L, 4L, 2L, 
        1L, 9L, 3L, 4L, 10L, 2L, 1L, 5L, 2L, 5L, 3L, 6L, 7L, 
        2L, 3L, 13L, 12L, 1L, 1L, 1L, 1L, 4L, 7L, 6L, 1L, 13L, 
        9L, 9L, 1L, 5L, 11L, 5L, 11L, 7L, 3L, 6L, 2L, 5L, 4L, 
        3L, 3L, 5L, 2L, 3L, 11L, 4L, 8L, 1L, 8L, 3L, 5L, 1L, 
        9L, 1L, 1L, 5L, 8L, 11L, 9L, 1L, 2L, 10L, 9L, 1L, 5L, 
        7L, 1L, 4L, 5L, 7L, 8L, 3L, 11L, 1L, 3L, 4L, 9L, 3L, 
        8L, 2L, 5L, 7L, 7L, 8L, 4L, 8L, 1L, 1L, 5L, 4L, 2L, 10L, 
        8L, 2L, 4L, 9L, 1L), wclass = structure(c(21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 28L, 21L, 21L, 28L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 28L, 21L, 
        21L, 28L, 30L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 
        21L, 28L, 21L, 21L, 22L, 21L, 21L, 21L, 21L, 28L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 30L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 28L, 22L, 21L, 29L, 22L, 21L, 28L, 30L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 30L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 28L, 21L, 28L, 29L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 30L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 29L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 30L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 2L, 21L, 29L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 30L, 21L, 
        21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 22L, 21L, 29L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 30L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 28L, 22L, 21L, 29L, 21L, 
        21L, 29L, 21L, 21L, 29L, 22L, 21L, 29L, 22L, 21L, 28L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 29L, 21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 
        21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        30L, 28L, 2L, 28L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 29L, 21L, 21L, 
        21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 
        23L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 30L, 21L, 21L, 21L, 21L, 21L, 
        29L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 30L, 28L, 2L, 28L, 21L, 21L, 21L, 21L, 
        23L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 21L, 
        29L, 21L, 21L, 21L, 28L, 21L, 28L, 29L, 21L, 21L, 21L, 
        21L, 29L, 21L, 21L, 21L, 30L, 21L, 21L, 29L, 21L, 21L, 
        21L, 21L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 21L, 29L, 21L, 21L, 21L, 21L, 
        21L, 21L, 21L, 21L, 21L, 30L), .Label = c("conjunction", 
        "number", "determiner", "existential", "foreign", "preposition", 
        "adjective", "listmarker", "modal", "noun", "name", "predeterminer", 
        "possesive", "pronoun", "adverb", "particle", "symbol", 
        "to", "interjection", "verb", "word", "abbreviation", 
        "unknown", "adposition", "auxiliary", "numeral", "other", 
        "punctuation", "comma", "fullstop"), class = "factor"), 
        desc = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), stop = c(FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 
        FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE
        ), stem = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 
        NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), idx = 1:625, 
        sntc = c(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
        1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
        1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 
        2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 2L, 3L, 3L, 3L, 
        3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
        3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 
        3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 3L, 4L, 4L, 4L, 4L, 
        4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 4L, 
        4L, 4L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
        5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
        5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 5L, 
        5L, 5L, 5L, 5L, 5L, 5L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 
        6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 
        6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 6L, 7L, 
        7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 7L, 
        8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 
        8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 8L, 
        8L, 8L, 8L, 8L, 8L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 
        9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 
        9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 9L, 
        9L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 
        10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 10L, 
        10L, 10L, 10L, 10L, 11L, 11L, 11L, 11L, 11L, 11L, 11L, 
        11L, 11L, 11L, 11L, 11L, 11L, 11L, 11L, 11L, 11L, 11L, 
        12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 
        12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 
        12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 
        12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 12L, 
        12L, 12L, 12L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 
        13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 
        13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 
        13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 
        13L, 13L, 13L, 13L, 13L, 13L, 13L, 13L, 14L, 14L, 14L, 
        14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 14L, 
        14L, 14L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 
        15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 
        15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 15L, 
        15L, 15L, 15L, 15L, 15L, 15L, 16L, 16L, 16L, 16L, 16L, 
        16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 
        16L, 16L, 16L, 16L, 16L, 16L, 16L, 16L, 17L, 17L, 17L, 
        17L, 17L, 17L, 17L, 17L, 17L, 17L, 17L, 17L, 17L, 17L, 
        17L, 17L, 17L, 17L, 17L, 17L, 17L, 18L, 18L, 18L, 18L, 
        18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 
        18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 18L, 
        18L, 18L, 18L, 18L, 18L, 19L, 19L, 19L, 19L, 19L, 19L, 
        19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 
        19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 
        19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 19L, 
        19L, 19L, 19L, 19L, 19L, 19L, 19L, 20L, 20L, 20L, 20L, 
        20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 
        20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 20L, 
        20L, 20L, 20L, 20L, 20L, 20L, 20L)), row.names = c(NA, 
    -625L), class = "data.frame"), features = logical(0), feat_list = list())
